-- ========================================
-- PRODUCTION-READY SUPABASE RBAC SCHEMA
-- ========================================
-- This migration creates a comprehensive RBAC system with audit trails,
-- production security considerations, and proper performance optimization.

-- =====================================
-- CUSTOM TYPES FOR PERFUME PLATFORM
-- =====================================

-- Granular permissions for perfume platform operations
CREATE TYPE public.app_permission AS ENUM (
  'perfumes.create', 'perfumes.update', 'perfumes.delete', 'perfumes.approve',
  'brands.create', 'brands.update', 'brands.delete', 'brands.approve',
  'notes.create', 'notes.update', 'notes.delete', 'notes.approve',
  'suggestions.create', 'suggestions.review', 'suggestions.moderate',
  'users.manage', 'users.suspend', 'analytics.view'
);

-- Simple role hierarchy (single role per user to avoid JWT bloat)
CREATE TYPE public.app_role AS ENUM ('super_admin', 'team_member', 'contributor');

-- =====================================
-- USER ROLES TABLE
-- =====================================

-- Single role per user to keep JWT claims lightweight
CREATE TABLE public.user_roles (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id uuid REFERENCES auth.users ON DELETE CASCADE NOT NULL,
  role app_role NOT NULL,
  assigned_at timestamp with time zone DEFAULT now(),
  assigned_by uuid REFERENCES auth.users,
  UNIQUE (user_id) -- Ensures single role per user
);

-- =====================================
-- ROLE PERMISSIONS MAPPING
-- =====================================

-- Static mapping of roles to permissions
CREATE TABLE public.role_permissions (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  role app_role NOT NULL,
  permission app_permission NOT NULL,
  UNIQUE (role, permission)
);

-- =====================================
-- AUDIT TRAIL FOR ROLE CHANGES
-- =====================================

-- Complete audit log for sensitive role changes
CREATE TABLE public.role_audit_log (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id uuid REFERENCES auth.users NOT NULL,
  old_role app_role,
  new_role app_role,
  changed_by uuid REFERENCES auth.users NOT NULL,
  reason text,
  changed_at timestamp with time zone DEFAULT now()
);

-- =====================================
-- USER PROFILE TABLE
-- =====================================

-- Extended user profile with column-level security considerations
CREATE TABLE public.users_profile (
  id uuid REFERENCES auth.users(id) PRIMARY KEY,
  username varchar(50) UNIQUE NOT NULL,
  full_name varchar(100),
  avatar_url text,
  country varchar(100),
  bio text,
  is_suspended boolean DEFAULT false,
  contribution_count integer DEFAULT 0,
  approval_rate decimal(5,2) DEFAULT 0,
  trust_level varchar(20) DEFAULT 'new' CHECK (trust_level IN ('new', 'trusted', 'expert')),
  last_login timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now()
);

-- =====================================
-- PUBLIC VIEW FOR LIMITED PROFILE EXPOSURE
-- =====================================

-- Public view exposes only safe profile columns (column-level security)
CREATE VIEW public.users_profile_public AS
SELECT
  id,
  username,
  avatar_url,
  contribution_count,
  trust_level,
  created_at
FROM public.users_profile
WHERE NOT is_suspended;

-- =====================================
-- COMMENTS AND DOCUMENTATION
-- =====================================

COMMENT ON TYPE public.app_permission IS 'Granular permissions for perfume platform operations';
COMMENT ON TYPE public.app_role IS 'User roles in hierarchical order: contributor < team_member < super_admin';
COMMENT ON TABLE public.user_roles IS 'Single role assignment per user to keep JWT lightweight';
COMMENT ON TABLE public.role_permissions IS 'Static mapping of roles to permissions';
COMMENT ON TABLE public.role_audit_log IS 'Complete audit trail for all role changes';
COMMENT ON TABLE public.users_profile IS 'Extended user profiles with trust levels and contribution tracking';
COMMENT ON VIEW public.users_profile_public IS 'Public view exposing only safe profile columns';

-- =====================================
-- TABLE CONSTRAINTS AND VALIDATIONS
-- =====================================

-- Ensure contribution count is non-negative
ALTER TABLE public.users_profile ADD CONSTRAINT contribution_count_non_negative
CHECK (contribution_count >= 0);

-- Ensure approval rate is between 0 and 100
ALTER TABLE public.users_profile ADD CONSTRAINT approval_rate_valid
CHECK (approval_rate >= 0 AND approval_rate <= 100);

-- Ensure username format (alphanumeric, underscores, hyphens only)
ALTER TABLE public.users_profile ADD CONSTRAINT username_format
CHECK (username ~ '^[a-zA-Z0-9_-]+$');

-- Ensure username minimum length
ALTER TABLE public.users_profile ADD CONSTRAINT username_min_length
CHECK (length(username) >= 3);